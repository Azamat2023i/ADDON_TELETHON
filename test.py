# -*- coding: utf-8 -*-
from telethon import TelegramClient, events
from config import *
from addon import CustomHTML

client = TelegramClient("my_account", api_id=api_id, api_hash=api_hash, system_version='4.16.30-vxCUSTOM')

test_text = """–≠—Ç–æ –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–∞—Å—Ç–æ—Ä–Ω–æ–≥–æ markdown:
<strong>–ñ–∏—Ä–Ω—ã–π</strong>
<em>–ö—É—Ä—Å–∏–≤</em>
<del>–ó–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π</del>
<code>–ö–∞–ø–∏—Ä—É—é—â–∏–π—Å—è</code>
<pre><code class='language-'>–ö–æ–¥{}</code></pre>
<u>–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π</u>
<spoiler>–°–ø–æ–π–ª–µ—Ä</spoiler>
<a href="https://github.com/">–°—Å—ã–ª–∫–∞</a>
<emoji id="5300928913956938544">üë©‚Äçüíª</emoji> - –∫–∞—Å—Ç–æ–º–Ω–∞—è —ç–º–æ—Ü–∏—è (–Ω—É–∂–µ–Ω —Ç–≥ –ø—Ä–µ–º–∏—É–º)


<blockquote collapsed="False"><u>class Descriptor:</u>
    <strong>def __get__(self, instance, owner):
 </strong>       <em>return instance._value</em>

    <strong>def __set__(self, instance, value):
 </strong>       if value &lt; 0:
            raise ValueError(&quot;–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º!&quot;)
        instance._value = value

<u>class MyClass:</u>
    value = Descriptor()

    def __init__(self, value):
        self.value = value

obj = MyClass(10)
print(obj.value)  # 10
obj.value = -5    # –û—à–∏–±–∫–∞: –ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º</blockquote>


<blockquote collapsed="True"><u>class Descriptor:</u>
    <strong>def __get__(self, instance, owner):
 </strong>       <em>return instance._value</em>

    <strong>def __set__(self, instance, value):
 </strong>       if value &lt; 0:
            raise ValueError(&quot;–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º!&quot;)
        instance._value = value

<u>class MyClass:</u>
    value = Descriptor()

    def __init__(self, value):
        self.value = value

obj = MyClass(10)
print(obj.value)  # 10
obj.value = -5    # –û—à–∏–±–∫–∞: –ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º</blockquote>"""


async def main():
    await client.start(phone=phone_number)
    client.parse_mode = CustomHTML()
    await client.send_message(1359387573, f"{test_text}", link_preview=False)


client.loop.run_until_complete(main())
